#include <stdio.h>
#include <stdlib.h>

// Node structure for doubly linked list
struct Node {
    int data;
    struct Node *prev;
    struct Node *next;
};

// Global variable for the head of the linked list
struct Node *head = NULL;

// Function to insert a node at the beginning of the list
void insertAtBeginning(int value) {
    struct Node *newNode = (struct Node *)malloc(sizeof(struct Node));
    newNode->data = value;
    newNode->prev = NULL;
    newNode->next = head;
    
    if (head != NULL) {
        head->prev = newNode;
    }
    
    head = newNode;
    
    printf("Node inserted at the beginning successfully!\n");
}

// Function to delete a node from the list by value
void deleteNode(int value) {
    struct Node *current = head;
    
    while (current != NULL) {
        if (current->data == value) {
            if (current->prev != NULL) {
                current->prev->next = current->next;
            } else {
                head = current->next;
            }
            
            if (current->next != NULL) {
                current->next->prev = current->prev;
            }
            
            free(current);
            printf("Node with value %d deleted successfully!\n", value);
            return;
        }
        
        current = current->next;
    }
    
    printf("Node with value %d not found!\n", value);
}

// Function to perform linear search in the list
void linearSearch(int value) {
    struct Node *current = head;
    int position = 0;
    
    while (current != NULL) {
        if (current->data == value) {
            printf("Value %d found at position %d\n", value, position);
            return;
        }
        
        current = current->next;
        position++;
    }
    
    printf("Value %d not found in the list!\n", value);
}

// Function to display the elements of the list
void displayList() {
    struct Node *current = head;
    
    printf("Linked List: ");
    while (current != NULL) {
        printf("%d ", current->data);
        current = current->next;
    }
    printf("\n");
}

int main() {
    int choice, value;
    
    do {
        printf("\n1. Insert at beginning\n2. Delete a node\n3. Linear search\n4. Display list\n0. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        
        switch(choice) {
            case 1:
                printf("Enter the value to insert: ");
                scanf("%d", &value);
                insertAtBeginning(value);
                break;
            case 2:
                printf("Enter the value to delete: ");
                scanf("%d", &value);
                deleteNode(value);
                break;
            case 3:
                printf("Enter the value to search: ");
                scanf("%d", &value);
                linearSearch(value);
                break;
            case 4:
                displayList();
                break;
            case 0:
                printf("Exiting program...\n");
                break;
            default:
                printf("Invalid choice! Please try again.\n");
        }
    } while(choice != 0);
    
    return 0;
}
